tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  ansibleGalaxy.nodes.ansible-role-postgresql:
    derived_from: tosca.nodes.SoftwareComponent
    description: "Create an ansible-role-postgresql"
    metadata:
      abstract: "false"
      final: "false"
      targetNamespace: "ansibleGalaxy.nodes"
    properties:
      role_name:
        type: string
        default: "ansible-role-postgresql"
        required: false
      version:
        type: string
        default: 3.0.0
        constraints:
          - valid_values: [ 3.0.0 ]
      postgresql_enablerepo:
        type: string
        default: ""
        required: false
      postgresql_restarted_state:
        type: string
        default: "restarted"
        required: false
      postgresql_python_library:
        type: string
        default: "python-psycopg2"
        required: false
      postgresql_user:
        type: string
        default: "postgres"
        required: false
      postgresql_group:
        type: string
        default: "postgres"
        required: false
      postgresql_service_state:
        type: string
        default: "started"
        required: false
      postgresql_service_enabled:
        type: string
        default: "true"
        required: false
      postgresql_databases:
        type: string
        default: "[ ]"
        required: false
      postgresql_users:
        type: string
        default: "[ ]"
        required: false
      postgres_users_no_log:
        type: string
        default: "true"
        required: false
#      postgresql_global_config_options:
#        -   type: string
#            - default: ""
#              - required: false
#        - option: unix_socket_directories
#          value: '{{ postgresql_unix_socket_directories | join(",") }}'
#      postgresql_hba_entries:
#        - { type: local, database: all, user: postgres, auth_method: peer }
#        - { type: local, database: all, user: all, auth_method: peer }
#        - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
#        - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
#      postgresql_unix_socket_directories:
#        - /var/run/postgresql
#      postgresql_locales:
#        - 'en_US.UTF-8'

    requirements:
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
#          node_filter:
#            capabilities:
#              - host:
#                  properties:
#                    ansible_version:
#                    constraints:
#                      - greater_or_equal: 2.9
#              - os:
#                  properties:
#                    type:
#                    constraints:
#                      - valid_values: [ "linux" ]
#                    distribution:
#                    constraints:
#                      - valid_values: [ "ubuntu", "debian" ]
#                    version:
#                    constraints:
#                      - valid_values: [ "stretch", "buster", "xenial", "bionic", "focal" ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            implementation:
              primary: create
              timeout: 0
    artifacts:
      create:
        type: ansibleGalaxy.artifacts.Ansible
        file: tasks/main.yaml